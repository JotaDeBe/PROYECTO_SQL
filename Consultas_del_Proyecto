--Consulta 2
|**|Muestra los nombres de todas las películas con una clasificación por
edades de ‘R’.

select title,rating 
from film
where rating = 'R';

--Consulta 3
|**|Encuentra los nombres de los actores que tengan un “actor_id” entre 30
y 40.

select concat(first_name,' ',last_name ) as "Actor/Actriz",actor_id 
from actor 
where "actor_id" between 40 and 50;

--Consulta 4
|**|Obtén las películas cuyo idioma coincide con el idioma original.

select f.title as "Peli",l.name as "Idioma"
from film f
join language l on f.language_id = l.language_id 
where f.language_id = f.original_language_id ;


--Consulta 5
|**|Ordena las películas por duración de forma ascendente.

select title,length  
from film
order by (length  )asc;


--Consulta 6
|**|Encuentra el nombre y apellido de los actores que tengan ‘Allen’ en su
apellido.

select concat(first_name ,' ',last_name)  as "Nombre Completo"
from actor
where "last_name" = 'ALLEN';


--Consulta 7
|**|Encuentra la cantidad total de películas en cada clasificación de la tabla
“film” y muestra la clasificación junto con el recuento.

select count(film_id ) as "Numero de peliculas",rating 
from film
group by rating;


--Consulta 8
|**|Encuentra el título de todas las películas que son ‘PG-13’ o tienen una
duración mayor a 3 horas en la tabla film.

select title,rating ,length 
from film 
where "rating" = 'PG-13' or "length"> 180;


--Consulta 9
|**|Encuentra la variabilidad de lo que costaría reemplazar las películas.

select distinct replacement_cost 
from film
order by (replacement_cost );


--Consulta 10
|**|Encuentra la mayor y menor duración de una película de nuestra BBDD.

select  MIN(length ) as "duracion_minima" , max (length ) as "duracion_maxima"
from film; 


--Consulta11
|**|Encuentra lo que costó el antepenúltimo alquiler ordenado por día.

select r.rental_id ,p.amount,r.rental_date 
from rental r 
inner join payment p 
on r.rental_id = p.rental_id 
order by(r.rental_date) desc
offset 2
limit 1;


--Consulta 12
|**|Encuentra el título de las películas en la tabla “film” que no sean ni ‘NC-
17’ ni ‘G’ en cuanto a su clasificación.

select title,rating 
from film f 
where "rating" not in ('NC-17','G');


--Consulta 13
|**|Encuentra el promedio de duración de las películas para cada
clasificación de la tabla film y muestra la clasificación junto con el
promedio de duración.

select AVG(length )as "duracion_promedio",rating as "clasificasion" 
from film f 
group by rating;


--Consulta 14
|**|Encuentra el título de todas las películas que tengan una duración mayor
a 180 minutos.

select title,length 
from film f 
where length  > '180';


--Consulta 15
|**|¿Cuánto dinero ha generado en total la empresa?

select SUM(amount ) as "Facturacion_Total"
from payment p; 


--Consulta 16
|**|Muestra los 10 clientes con mayor valor de id.

select concat (first_name,' ',last_name) as "Nombre_Cliente",customer_id 
from customer 
order by "customer_id" desc
limit 10;


--Consulta 17
|**|Encuentra el nombre y apellido de los actores que aparecen en la
película con título ‘Egg Igby’.

select concat(a.first_name,' ',a.last_name) as "Nombre_Actores"
from actor a 
inner join film_actor fa 
on a.actor_id = fa.actor_id
inner join film f 
on fa.film_id = f.film_id
where f.title in ('EGG IGBY');


--Consulta 18
|**|Selecciona todos los nombres de las películas únicos.

select distinct title 
from film f ;


--Consulta 19
|**|Encuentra el título de las películas que son comedias y tienen una
duración mayor a 180 minutos en la tabla “film”.

select f.title,c."name",f.length
from film f 
inner join film_category fc on f.film_id = fc.film_id
inner join category c on fc.category_id = c.category_id
where c."name" = 'Comedy'
       and f.length > '180';

 
 --Consulta 20
 |**|Encuentra las categorías de películas que tienen un promedio de
 duración superior a 110 minutos y muestra el nombre de la categoría
 junto con el promedio de duración.

 select AVG(length ),rating 
 from film f 
 group by rating
 having  avg(length )> 110;
 
 
 --Consulta 21
 |**|¿Cuál es la media de duración del alquiler de las películas?
 
 select AVG(rental_duration )
 from film f ;
 
 
 --Consulta 22
 |**|Crea una columna con el nombre y apellidos de todos los actores y
actrices.

 select concat(first_name ,' ',last_name )as "Actores"
 from actor;
 
 
 --Consulta 23 
 |**|Números de alquiler por día, ordenados por cantidad de alquiler de
forma descendente.

 select 
     extract(day from rental_date) as "Día",
     count(*) as "Cantidad_Alquileres"
 from rental r 
 group by extract(day from rental_date) 
 order by("Cantidad_Alquileres") desc;
 
 
 --Consulta 24
 |**|Encuentra las películas con una duración superior al promedio.
 
 select title ,length 
 from film
 where length > (select AVG(length )
                 from film
                 );
 
 
 --Consulta 25
 |**|Averigua el número de alquileres registrados por mes.
 
 select 
     extract(month from rental_date)as "Mes",
     count(*) as "Total_alquileres"
from rental
group by extract(month from rental_date)
order by "Mes";


--Consulta 26
|**|Encuentra el promedio, la desviación estándar y varianza del total
pagado.

select round(AVG(amount ),2) as "promedio_redondeado_total _pagado"
from payment p ;

select stddev(amount ) as "desviacion_total_pagado"
from payment;

select variance(amount ) as "varianza_total_pagado"
from payment;


--Consulta 27
|**|¿Qué películas se alquilan por encima del precio medio?

select f.title,rental_rate 
from film f  
where rental_rate  > (select AVG(rental_rate  ) 
                      from film f2 );


--Consulta 28
|**|Muestra el id de los actores que hayan participado en más de 40
películas.

select actor_id,COUNT(film_id)  
from film_actor fa 
group by actor_id
having COUNT(film_id) >40;


--Consulta 29
|**|Obtener todas las películas y, si están disponibles en el inventario,
mostrar la cantidad disponible.

select title,count(i.film_id)as "Cantidad_disponible" 
from film f 
left join inventory i 
on i.film_id =f.film_id
group by f.title;


--Consulta 30
|**|Obtener los actores y el número de películas en las que ha actuado.

select concat(a.first_name ,' ',a.last_name )as "Actor/Actriz",COUNT( fa.film_id ) as "peliculas"
from actor a 
inner join film_actor fa 
on a.actor_id = fa.actor_id
group by "Actor/Actriz";


--Consulta 31
|**|Obtener todas las películas y mostrar los actores que han actuado en
ellas, incluso si algunas películas no tienen actores asociados.

select f.title ,concat(a.first_name,' ',a.last_name ) as "Actor/Actriz"
from film f 
left join film_actor fa on f.film_id = fa.film_id
left join actor a on fa.actor_id =a.actor_id ; 
 

--Consulta 32
|**|Obtener todos los actores y mostrar las películas en las que han
actuado, incluso si algunos actores no han actuado en ninguna película.

select concat(a.first_name,' ',a.last_name ) as "Actor/Actriz",f.title
from actor a 
left join film_actor fa on a.actor_id = fa.actor_id
left join film f on fa.film_id = f.film_id;


--Consulta 33
|**|Obtener todas las películas que tenemos y todos los registros de
alquiler.

select f.title,COUNT(r.rental_id)as "Registro_alquiler"
from film f
join inventory i 
on f.film_id =i.film_id
join rental r 
on i.inventory_id =r.inventory_id
group by f.title;


--Consulta 34
|**|Encuentra los 5 clientes que más dinero se hayan gastado con nosotros.

select concat(first_name ,' ',last_name )as "Nombre_Cliente",SUM(p.amount) as "Total_gastado"
from customer c 
join payment p 
on c.customer_id =p.customer_id
group by "Nombre_Cliente"
order by "Total_gastado" desc
limit 5;


--Consulta 35
|**|Selecciona todos los actores cuyo primer nombre es 'Johnny'.

select concat(first_name ,' ',last_name) as "Actor/Actriz"
from actor a 
where first_name = 'JOHNNY';


--Consulta 36 
|**|Renombra la columna “first_name” como Nombre y “last_name” como
Apellido.
NOTA:al pulsar renovar vuelve a poner el nombre original de las columnas :(


--Consulta 37
|**|Encuentra el ID del actor más bajo y más alto en la tabla actor.

select MAX(actor_id ),MIN(actor_id )
from actor a;


--Consulta 38
|**|Cuenta cuántos actores hay en la tabla “actor”.

select count (distinct(actor_id ))
from actor a;


--Consulta 39
|**|Selecciona todos los actores y ordénalos por apellido en orden
ascendente.

select concat(first_name,' ',last_name) as "Nombre" 
from actor a 
order by last_name asc;


--Consulta 40
|**|Selecciona las primeras 5 películas de la tabla “film”.

select title 
from film f 
limit 5;


--Consulta 41
|**|Agrupa los actores por su nombre y cuenta cuántos actores tienen el
mismo nombre. ¿Cuál es el nombre más repetido?

select first_name,COUNT(first_name) 
from actor a
group by first_name 
order by COUNT(first_name) desc;


--Consulta 42
|**|Encuentra todos los alquileres y los nombres de los clientes que los
realizaron.

select rental_id,concat(first_name ,' ',last_name ) as "Cliente"
from rental r 
join customer c 
on r.customer_id =c.customer_id;


--Consulta 43 
|**|Muestra todos los clientes y sus alquileres si existen, incluyendo
aquellos que no tienen alquileres.

select concat(first_name ,' ',last_name ) as "Cliente", r.rental_id 
from customer c
left join rental r 
on c.customer_id =r.customer_id ;


--Consulta 44
|**|Realiza un CROSS JOIN entre las tablas film y category. ¿Aporta valor
esta consulta? ¿Por qué? Deja después de la consulta la contestación.

select *
from film f 
cross join category c ;
|**|Considero que no aporta valor ya que combina cada fila de "Film" con cada fila de "Category".
    Ejemplo:La peli 'Academy dinosaur' con id 1,se combina con cada categoría(colunma "Name"),por lo que
    no tendría sentido esta consulta
    
    
--Consulta 45 
|**|Encuentra los actores que han participado en películas de la categoría
'Action'.

select concat(first_name,' ',last_name)as "Actor/Actriz",c."name" as "Categoría"
from actor a 
join film_actor fa  on a.actor_id =fa.actor_id 
join film f  on fa.film_id =f.film_id 
join film_category fc on f.film_id =fc.film_id 
join category c on fc.category_id =c.category_id
where c."name" = 'Action';
                    
                    
--Consulta 46 
|**|Encuentra todos los actores que no han participado en películas.

select first_name 
from actor a 
left join film_actor fa on a.actor_id = fa.actor_id
where film_id is null;


--Consulta 47
|**|Selecciona el nombre de los actores y la cantidad de películas en las
que han participado.

select concat(first_name,' ',last_name )as "Actor/Actriz",COUNT(film_id )as "Cantidad_Pelis"
from actor a 
join film_actor fa 
on a.actor_id = fa.actor_id
group by "Actor/Actriz" ; 


--Consulta 48
|**|Crea una vista llamada “actor_num_peliculas” que muestre los nombres
de los actores y el número de películas en las que han participado.

create view "actor_num_peliculas"as
select concat(first_name,' ',last_name )as "Actor/Actriz",COUNT(film_id )as "Cantidad_Pelis"
from actor a 
join film_actor fa 
on a.actor_id = fa.actor_id
group by "Actor/Actriz" ;


--Consulta 49
|**|Calcula el número total de alquileres realizados por cada cliente.

select concat(first_name,' ',last_name )as "Nombre_Cliente",COUNT(rental_id )as "Total_Alquileres"
from customer c 
join rental r 
on c.customer_id = r.customer_id
group by "Nombre_Cliente" ;


--Consulta 50
|**|Calcula la duración total de las películas en la categoría 'Action'.

select SUM(length)as "Duracion_Total",c."name" 
from film f 
join film_category fc 
on f.film_id = fc.film_id
join category c 
on fc.category_id = c.category_id
group by c."name"
having "name" = 'Action';


--Consulta 51
|**|Crea una tabla temporal llamada “cliente_rentas_temporal” para
almacenar el total de alquileres por cliente.

with  Clientes_rentas_temporal as ( 
     select concat(first_name,' ',last_name )as "Nombre_Cliente",COUNT(r.rental_id)as "Total_Alquileres"
     from customer c 
     join rental r 
     on c.customer_id =r.customer_id
     group by "Nombre_Cliente" 
     )
select *
from Clientes_rentas_temporal ;


--Consulta 52
|**|Crea una tabla temporal llamada “peliculas_alquiladas” que almacene las
películas que han sido alquiladas al menos 10 veces.

with peliculas_alquiladas as( 
     select title ,count(r.rental_id )as "Veces_Alquiladas"
     from film f 
     join inventory i 
     on f.film_id =i.film_id
     join rental r 
     on i.inventory_id =r.inventory_id
     group by f.title 
     having count(r.rental_id ) >= 10
     )
select *
from peliculas_alquiladas ;


--Consulta 53
|**|Encuentra el título de las películas que han sido alquiladas por el cliente
con el nombre ‘Tammy Sanders’ y que aún no se han devuelto. Ordena
los resultados alfabéticamente por título de película.

select title,r.return_date
from film f 
join inventory i on f.film_id =i.film_id
join rental r on i.inventory_id =r.inventory_id
join customer c on r.customer_id = c.customer_id
where c.first_name = 'TAMMY'
and c.last_name = 'SANDERS'
and r.return_date is null
order by f.title ;


--Consulta 54
|**|Encuentra los nombres de los actores que han actuado en al menos una
película que pertenece a la categoría ‘Sci-Fi’. Ordena los resultados
alfabéticamente por apellido.

select concat(a.first_name,' ',a.last_name) as "Nombre_actores"
from actor a 
join film_actor fa on a.actor_id = fa.actor_id
join film f on fa.film_id = f.film_id
join film_category fc on f.film_id = fc.film_id
join category c on fc.category_id = c.category_id
where c."name" = 'Sci-Fi'
order by a.last_name ;


--Consulta 55
|**|Encuentra el nombre y apellido de los actores que han actuado en
películas que se alquilaron después de que la película ‘Spartacus
Cheaper’ se alquilara por primera vez. Ordena los resultados
alfabéticamente por apellido.

select concat(first_name ,' ',last_name )as "Actor/Actriz"
from actor a
join film_actor fa on a.actor_id = fa.actor_id
join film f on fa.film_id = f.film_id
join inventory i on f.film_id = i.film_id
join rental r on i.inventory_id = r.inventory_id
where r.rental_date > (select r.rental_date
                       from film f 
                       join inventory i on f.film_id = i.film_id
                       join rental r on i.inventory_id = r.inventory_id
                       where title = 'SPARTACUS CHEAPER'
                       order by r.rental_date asc
                       limit 1
                       )
group by "Actor/Actriz"
order by last_name asc;


--Consulta 56
|**|Encuentra el nombre y apellido de los actores que no han actuado en
ninguna película de la categoría ‘Music’.

select first_name 
from actor a 
join film_actor fa on a.actor_id =fa.actor_id
join film f  on fa.film_id =f.film_id 
join film_category fc on f.film_id = fc.film_id
join category c on fc.category_id =c.category_id
where c."name" <>'Music'
group by a.first_name;


--Consulta 57
|**|Encuentra el título de todas las películas que fueron alquiladas por más
de 8 días.

select title,return_date - rental_date as "tiempo_alquiler"
from film f 
join inventory i on f.film_id =i.film_id
join rental r on i.inventory_id = r.inventory_id
where return_date - rental_date > interval '8 days';


--Consulta 58
|**|Encuentra el título de todas las películas que son de la misma categoría
que ‘Animation’.

select title 
from film f 
join film_category fc on f.film_id = fc.film_id
join category c on fc.category_id = c.category_id
where c."name" = 'Animation';


--Consulta 59
|**|Encuentra los nombres de las películas que tienen la misma duración
que la película con el título ‘Dancing Fever’. Ordena los resultados
alfabéticamente por título de película.

select title 
from film 
where length in (select length 
                 from film f 
                 where title = 'DANCING FEVER'
                 )
order by title;


--Consulta 60
|**|Encuentra los nombres de los clientes que han alquilado al menos 7
películas distintas. Ordena los resultados alfabéticamente por apellido.

select concat(first_name,' ',last_name) as "Nombre_Clientes" 
from customer c 
join rental r on c.customer_id =r.customer_id
where rental_id in (select COUNT(rental_id )
                   from rental r 
                   group by customer_id
                   having COUNT(rental_id ) > 6
                   )
order by last_name ;


--Consulta 61
|**|Encuentra la cantidad total de películas alquiladas por categoría y
muestra el nombre de la categoría junto con el recuento de alquileres.

select c."name" as "Categoría",COUNT(rental_id ) as "Cantidad_alquileres"
from category c 
join film_category fc on c.category_id = fc.category_id
join film f on fc.film_id =f.film_id
join inventory i on f.film_id =i.film_id
join rental r on i.inventory_id = r.inventory_id
group by c."name";


--Consulta 62
|**|Encuentra el número de películas por categoría estrenadas en 2006.

select c."name" as "Categoría",COUNT(rental_id ) as "Cantidad_alquileres"
from category c 
join film_category fc on c.category_id = fc.category_id
join film f on fc.film_id =f.film_id
join inventory i on f.film_id =i.film_id
join rental r on i.inventory_id = r.inventory_id
where f.release_year = '2006'
group by c."name";


--Consulta 63
|**|Obtén todas las combinaciones posibles de trabajadores con las tiendas
que tenemos.

select first_name,s2.store_id  
from staff s 
cross join store s2;

--Consulta 64
|**|Encuentra la cantidad total de películas alquiladas por cada cliente y
muestra el ID del cliente, su nombre y apellido junto con la cantidad de
películas alquiladas.

select concat(first_name ,' ',last_name )as "Nombre_Clientes",c.customer_id ,count(rental_id )as "Cantidad_Alquileres"
from customer c 
join rental r on c.customer_id =r.customer_id
group by "Nombre_Clientes", c.customer_id;